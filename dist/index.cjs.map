{"version":3,"sources":["../src/index.ts"],"sourcesContent":["/*\nHow it works:\n`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.\n*/\n\nclass Node<T> {\n  value: T;\n  next: Node<T> | undefined;\n\n  constructor(value: T) {\n    this.value = value;\n    this.next = undefined;\n  }\n}\n\nexport default class Queue<ValueType> implements Iterable<ValueType> {\n  private _first: Node<ValueType> | undefined;\n  private _last: Node<ValueType> | undefined;\n  private _size: number = 0;\n\n  constructor() {\n    this.clear();\n  }\n\n  clear(): void {\n    this._first = undefined;\n    this._last = undefined;\n    this._size = 0;\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  enqueue(value: ValueType): void {\n    const node = new Node<ValueType>(value);\n\n    if (this._first && this._last) {\n      this._last.next = node;\n    } else {\n      this._first = node;\n    }\n\n    this._last = node;\n    this._size++;\n  }\n\n  dequeue(): ValueType | undefined {\n    const current = this._first;\n\n    if (!current) {\n      return undefined;\n    }\n\n    this._first = current.next;\n    this._size--;\n\n    return current.value;\n  }\n\n  peek(): ValueType | undefined {\n    return this._first?.value;\n  }\n\n  *[Symbol.iterator](): IterableIterator<ValueType> {\n    let current = this._first;\n\n    while (current) {\n      yield current.value;\n      current = current.next;\n    }\n  }\n\n  *drain(): IterableIterator<ValueType | undefined> {\n    while (this._first) {\n      yield this.dequeue();\n    }\n  }\n}\n"],"mappings":"yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAKA,IAAMI,EAAN,KAAc,CACZ,MACA,KAEA,YAAYC,EAAU,CACpB,KAAK,MAAQA,EACb,KAAK,KAAO,MACd,CACF,EAEqBH,EAArB,KAAqE,CAC3D,OACA,MACA,MAAgB,EAExB,aAAc,CACZ,KAAK,MAAM,CACb,CAEA,OAAc,CACZ,KAAK,OAAS,OACd,KAAK,MAAQ,OACb,KAAK,MAAQ,CACf,CAEA,IAAI,MAAe,CACjB,OAAO,KAAK,KACd,CAEA,QAAQG,EAAwB,CAC9B,IAAMC,EAAO,IAAIF,EAAgBC,CAAK,EAElC,KAAK,QAAU,KAAK,MACtB,KAAK,MAAM,KAAOC,EAElB,KAAK,OAASA,EAGhB,KAAK,MAAQA,EACb,KAAK,OACP,CAEA,SAAiC,CAC/B,IAAMC,EAAU,KAAK,OAErB,GAAKA,EAIL,YAAK,OAASA,EAAQ,KACtB,KAAK,QAEEA,EAAQ,KACjB,CAEA,MAA8B,CAC5B,OAAO,KAAK,QAAQ,KACtB,CAEA,EAAE,OAAO,QAAQ,GAAiC,CAChD,IAAIA,EAAU,KAAK,OAEnB,KAAOA,GACL,MAAMA,EAAQ,MACdA,EAAUA,EAAQ,IAEtB,CAEA,CAAC,OAAiD,CAChD,KAAO,KAAK,QACV,MAAM,KAAK,QAAQ,CAEvB,CACF","names":["index_exports","__export","Queue","__toCommonJS","Node","value","node","current"]}