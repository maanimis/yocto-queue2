var i=class{value;next;constructor(e){this.value=e,this.next=void 0}},s=class{_first;_last;_size=0;constructor(){this.clear()}clear(){this._first=void 0,this._last=void 0,this._size=0}get size(){return this._size}enqueue(e){let t=new i(e);this._first&&this._last?this._last.next=t:this._first=t,this._last=t,this._size++}dequeue(){let e=this._first;if(e)return this._first=e.next,this._size--,e.value}peek(){return this._first?.value}*[Symbol.iterator](){let e=this._first;for(;e;)yield e.value,e=e.next}*drain(){for(;this._first;)yield this.dequeue()}};export{s as default};
//# sourceMappingURL=index.js.map